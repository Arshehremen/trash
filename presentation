# pip install python-pptx

from pptx import Presentation

# Открываем существующую презентацию
prs = Presentation('template.pptx')

# Получаем шаблон слайда
slide_layout = prs.slide_layouts[0]

# Данные для подстановки
data = [
    ['Значение 1', 'Значение 2', 'Значение 3', 'Значение 4'],
    ['Другое значение 1', 'Другое значение 2', 'Другое значение 3', 'Другое значение 4'],
    # Добавьте больше данных по необходимости...
]

for values in data:
    slide = prs.slides.add_slide(slide_layout)
    
    # Подставляем значения в нужные места
    shapes = slide.shapes
    
    shapes[0].text_frame.text = values[0]  # Первое значение
    shapes[1].text_frame.text = values[1]  # Второе значение
    shapes[2].text_frame.text = values[2]  # Третье значение
    shapes[3].text_frame.text = values[3]  # Четвертое значение

# Сохраняем новую презентацию
prs.save('new_presentation.pptx')

def duplicate_slide(pres, index):
    template = pres.slides[index]
    try:
        blank_slide_layout = pres.slide_layouts[12]
    except:
        blank_slide_layout = pres.slide_layouts[len(pres.slide_layouts)]

    copied_slide = pres.slides.add_slide(blank_slide_layout)

    for shp in template.shapes:
        el = shp.element
        newel = copy.deepcopy(el)
        copied_slide.shapes._spTree.insert_element_before(newel, 'p:extLst')

    for _, value in six.iteritems(template.part.rels):
        # Make sure we don't copy a notesSlide relation as that won't exist
        if "notesSlide" not in value.reltype:
            copied_slide.part.rels.add_relationship(
                value.reltype,
                value._target,
                value.rId
            )

    return copied_slide



######################


from pptx import Presentation

# Открываем исходную презентацию
prs_source = Presentation('source.pptx')

# Открываем целевую презентацию
prs_target = Presentation()  # Создаем новую пустую презентацию

# Получаем индекс слайда, который хотим скопировать
slide_index = 0  # Индекс первого слайда

# Копируем слайд
slide_to_copy = prs_source.slides[slide_index]

# Вставляем слайд в целевую презентацию
blank_layout = prs_target.slide_layouts[len(prs_target.slide_layouts)-1]  # Берём последний макет
copied_slide = prs_target.slides.add_slide(blank_layout)

# Переносим все элементы с исходного слайда на новый
for shape in slide_to_copy.shapes:
    copied_slide.shapes._spTree.remove(shape._element)
    copied_slide.shapes._spTree.insert_element_before(shape._element, 'p:extLst')

# Сохраняем целевую презентацию
prs_target.save('new_target.pptx')  # Имя нового файла

